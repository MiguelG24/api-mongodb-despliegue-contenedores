plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'com.bmuschko.docker-spring-boot-application' version '6.7.0'
}

group = 'com.mongo.personas'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

jar {
	archiveBaseName = rootProject.name
	version = ''
}


configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

ext {
	dockerRepo = 'api-personas-mongodb'
	dockerTag = '0.0.1-snapshot'
	dockerRegistry = 'migueldeveloper'
	jarName = rootProject.name
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

import com.bmuschko.gradle.docker.tasks.image.*

task createDockerfile(type: Dockerfile) {
	destFile = project.file('build/libs/Dockerfile')
	from 'openjdk:8-jre-alpine'
	label(['maintainer':'Miguel Gonzalez "iscmagc24@gmail.com"'])
	copyFile "${jarName}.jar", "/opt/${jarName}.jar"
	exposePort 8761
	entryPoint 'java', '-Djava.security.edg=file:/dev/./urandom', '-jar', "/opt/${jarName}.jar"
}

task buildImage(type: DockerBuildImage) {	
	dependsOn createDockerfile
	inputDir = createDockerfile.getDestDir()
	images = ["${dockerRegistry}/${dockerRepo}:${dockerTag}"]
}

task pushImage(type: DockerPushImage) {
    dependsOn buildImage
    images.set(buildImage.images)
}

createDockerfile.dependsOn bootJar
